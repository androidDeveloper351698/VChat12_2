package com.vince.vchat12.data;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.vince.vchat12.data.UserData;
import com.vince.vchat12.data.FriendData;
import com.vince.vchat12.data.GroupData;
import com.vince.vchat12.data.MsgData;
import com.vince.vchat12.data.DialogueData;
import com.vince.vchat12.data.CircleWeb;

import com.vince.vchat12.data.UserDataDao;
import com.vince.vchat12.data.FriendDataDao;
import com.vince.vchat12.data.GroupDataDao;
import com.vince.vchat12.data.MsgDataDao;
import com.vince.vchat12.data.DialogueDataDao;
import com.vince.vchat12.data.CircleWebDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDataDaoConfig;
    private final DaoConfig friendDataDaoConfig;
    private final DaoConfig groupDataDaoConfig;
    private final DaoConfig msgDataDaoConfig;
    private final DaoConfig dialogueDataDaoConfig;
    private final DaoConfig circleWebDaoConfig;

    private final UserDataDao userDataDao;
    private final FriendDataDao friendDataDao;
    private final GroupDataDao groupDataDao;
    private final MsgDataDao msgDataDao;
    private final DialogueDataDao dialogueDataDao;
    private final CircleWebDao circleWebDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDataDaoConfig = daoConfigMap.get(UserDataDao.class).clone();
        userDataDaoConfig.initIdentityScope(type);

        friendDataDaoConfig = daoConfigMap.get(FriendDataDao.class).clone();
        friendDataDaoConfig.initIdentityScope(type);

        groupDataDaoConfig = daoConfigMap.get(GroupDataDao.class).clone();
        groupDataDaoConfig.initIdentityScope(type);

        msgDataDaoConfig = daoConfigMap.get(MsgDataDao.class).clone();
        msgDataDaoConfig.initIdentityScope(type);

        dialogueDataDaoConfig = daoConfigMap.get(DialogueDataDao.class).clone();
        dialogueDataDaoConfig.initIdentityScope(type);

        circleWebDaoConfig = daoConfigMap.get(CircleWebDao.class).clone();
        circleWebDaoConfig.initIdentityScope(type);

        userDataDao = new UserDataDao(userDataDaoConfig, this);
        friendDataDao = new FriendDataDao(friendDataDaoConfig, this);
        groupDataDao = new GroupDataDao(groupDataDaoConfig, this);
        msgDataDao = new MsgDataDao(msgDataDaoConfig, this);
        dialogueDataDao = new DialogueDataDao(dialogueDataDaoConfig, this);
        circleWebDao = new CircleWebDao(circleWebDaoConfig, this);

        registerDao(UserData.class, userDataDao);
        registerDao(FriendData.class, friendDataDao);
        registerDao(GroupData.class, groupDataDao);
        registerDao(MsgData.class, msgDataDao);
        registerDao(DialogueData.class, dialogueDataDao);
        registerDao(CircleWeb.class, circleWebDao);
    }
    
    public void clear() {
        userDataDaoConfig.getIdentityScope().clear();
        friendDataDaoConfig.getIdentityScope().clear();
        groupDataDaoConfig.getIdentityScope().clear();
        msgDataDaoConfig.getIdentityScope().clear();
        dialogueDataDaoConfig.getIdentityScope().clear();
        circleWebDaoConfig.getIdentityScope().clear();
    }

    public UserDataDao getUserDataDao() {
        return userDataDao;
    }

    public FriendDataDao getFriendDataDao() {
        return friendDataDao;
    }

    public GroupDataDao getGroupDataDao() {
        return groupDataDao;
    }

    public MsgDataDao getMsgDataDao() {
        return msgDataDao;
    }

    public DialogueDataDao getDialogueDataDao() {
        return dialogueDataDao;
    }

    public CircleWebDao getCircleWebDao() {
        return circleWebDao;
    }

}
